SHELL=/bin/zsh

# set locale
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export GIT_EDITOR=nvim
export VISUAL=nvim
export EDITOR=nvim

export HISTFILE=~/.zsh_history
export HISTSIZE=999999999
export SAVEHIST=$HISTSIZE

# Customize to your needs...
export PATH=$PATH:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# Add python
export PATH=$PATH:~/Library/Python/2.7/bin

export PATH=$PATH:~/workspace/bin

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.dotfiles/zsh/oh-my-zsh

# if tmux session active source custom conf file
if { [ -n "$TMUX" ]; } then
    tmux source-file ~/.tmux.conf > /dev/null
fi

ZSH_THEME="kphoen"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=60'  # for dark theme
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=180' # for light theme

# plugins=(zsh-autosuggestions zsh-syntax-highlighting zsh-completion git)
plugins=(zsh-autosuggestions zsh-syntax-highlighting git)

source $ZSH/oh-my-zsh.sh

PROMPT='[%~$(git_prompt_info)]
%# '

alias ta='tmux attach-session -t'
alias tn='tmux new-session -s'
alias tnn='TMUX= tmux new -d -s'
alias tl='tmux list-sessions'

alias sl='ls'
alias gs='git status'

alias vim='nvim'

# Add go bin dir to path
export PATH=$PATH:$GOPATH/bin

function sourceNvm {
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
sourceNvm

function sourcePy {
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}

function resetMagnet {
    pmset displaysleepnow; sleep 5; caffeinate -u -t 1
}

NODE_OPTIONS=--max_old_space_size=2048

# fzf keybindings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

##
# Elipsed time START
zmodload zsh/datetime

prompt_preexec() {
  prompt_prexec_realtime=${EPOCHREALTIME}
}

prompt_precmd() {
  if (( prompt_prexec_realtime )); then
    local -rF elapsed_realtime=$(( EPOCHREALTIME - prompt_prexec_realtime ))
    local -rF s=$(( elapsed_realtime%60 ))
    local -ri elapsed_s=${elapsed_realtime}
    local -ri m=$(( (elapsed_s/60)%60 ))
    local -ri h=$(( elapsed_s/3600 ))
    if (( h > 0 )); then
      printf -v prompt_elapsed_time '%ih%im' ${h} ${m}
    elif (( m > 0 )); then
      printf -v prompt_elapsed_time '%im%is' ${m} ${s}
    elif (( s >= 10 )); then
      printf -v prompt_elapsed_time '%.2fs' ${s} # 12.34s
    elif (( s >= 1 )); then
      printf -v prompt_elapsed_time '%.3fs' ${s} # 1.234s
    else
      printf -v prompt_elapsed_time '%ims' $(( s*1000 ))
    fi
    unset prompt_prexec_realtime
  else
    # Clear previous result when hitting ENTER with no command to execute
    unset prompt_elapsed_time
  fi
}

setopt nopromptbang prompt{cr,percent,sp,subst}

autoload -Uz add-zsh-hook
add-zsh-hook preexec prompt_preexec
add-zsh-hook precmd prompt_precmd

RPS1='%F{cyan}${prompt_elapsed_time}%F{none}'

# Elipsed time END
##
